# üöÄ Render Deployment Checklist

## ‚úÖ Pre-Deployment Checklist

### 1. Code Preparation
- ‚úÖ All .md documentation files removed
- ‚úÖ Performance optimizations applied
- ‚úÖ Database indexes created
- ‚úÖ Caching configured
- ‚úÖ Query optimization complete

### 2. Environment Files
- ‚úÖ `.env.template` created for backend
- ‚úÖ `.env.template` created for frontend
- ‚ö†Ô∏è Ensure `.env` files are in `.gitignore` (DO NOT commit)

### 3. Dependencies
- ‚úÖ `requirements.txt` includes all packages
- ‚úÖ `python-decouple` added
- ‚úÖ `gunicorn` included
- ‚úÖ `psycopg2-binary` for PostgreSQL
- ‚úÖ `package.json` up to date

---

## üîß Render Setup Instructions

### Step 1: Push Code to GitHub

```bash
cd "/home/batombari/Documents/Full stack dev"
git add .
git commit -m "Production ready - performance optimized"
git push origin main
```

### Step 2: Create Render Account
1. Go to https://render.com
2. Sign up with GitHub
3. Authorize Render to access your repository

### Step 3: Deploy Backend (Django)

#### A. Create New Web Service
1. Click "New +" ‚Üí "Web Service"
2. Connect your GitHub repository
3. Select branch: `main`

#### B. Configure Service Settings
- **Name:** `edupro-backend` (or your preferred name)
- **Region:** Oregon (or closest to you)
- **Branch:** main
- **Root Directory:** `backend`
- **Runtime:** Python 3
- **Build Command:**
  ```bash
  pip install --upgrade pip && pip install -r requirements.txt && python manage.py collectstatic --noinput && python manage.py migrate --noinput
  ```
- **Start Command:**
  ```bash
  gunicorn backend.wsgi:application --bind 0.0.0.0:$PORT --workers 2 --timeout 120
  ```
- **Plan:** Free

#### C. Environment Variables (Backend)
Add these in Render dashboard under "Environment":

```
SECRET_KEY=<generate a strong secret key>
DEBUG=False
ALLOWED_HOSTS=.onrender.com
DB_NAME=<your_supabase_db_name>
DB_USER=<your_supabase_user>
DB_PASSWORD=<your_supabase_password>
DB_HOST=<your_supabase_host>.pooler.supabase.com
DB_PORT=6543
CORS_ALLOWED_ORIGINS=https://your-frontend.onrender.com
PYTHON_VERSION=3.11.0
```

**Generate SECRET_KEY:**
```python
# Run in Python shell
import secrets
print(secrets.token_urlsafe(50))
```

#### D. Deploy Backend
1. Click "Create Web Service"
2. Wait for deployment (5-10 minutes)
3. Note your backend URL: `https://edupro-backend.onrender.com`

---

### Step 4: Deploy Frontend (React)

#### A. Create New Static Site
1. Click "New +" ‚Üí "Static Site"
2. Connect your GitHub repository
3. Select branch: `main`

#### B. Configure Static Site Settings
- **Name:** `edupro-frontend` (or your preferred name)
- **Region:** Oregon (same as backend)
- **Branch:** main
- **Root Directory:** `frontend`
- **Build Command:**
  ```bash
  npm install && npm run build
  ```
- **Publish Directory:** `dist`

#### C. Environment Variables (Frontend)
Add in Render dashboard:

```
VITE_API_URL=https://edupro-backend.onrender.com
NODE_VERSION=20.0.0
```

**IMPORTANT:** Use your actual backend URL from Step 3D

#### D. Deploy Frontend
1. Click "Create Static Site"
2. Wait for deployment (3-5 minutes)
3. Note your frontend URL: `https://edupro-frontend.onrender.com`

---

### Step 5: Update CORS Settings

1. Go back to Backend service in Render
2. Update environment variable:
   ```
   CORS_ALLOWED_ORIGINS=https://your-actual-frontend.onrender.com
   ```
3. Save changes (backend will auto-redeploy)

---

## üîç Post-Deployment Verification

### 1. Test Backend API
```bash
curl https://your-backend.onrender.com/api/
```
Should return API info or 404 (not 500 error)

### 2. Test Frontend
1. Visit your frontend URL
2. Try to login
3. Check browser console for errors

### 3. Check Logs
- **Backend logs:** Render dashboard ‚Üí Your backend service ‚Üí Logs
- **Frontend logs:** Render dashboard ‚Üí Your frontend service ‚Üí Logs

---

## üö® Common Issues & Solutions

### Issue 1: Backend 502 Bad Gateway
**Cause:** Gunicorn not starting properly
**Solution:**
1. Check logs in Render dashboard
2. Verify `requirements.txt` has `gunicorn`
3. Check start command syntax

### Issue 2: Frontend Can't Connect to Backend
**Cause:** CORS not configured
**Solution:**
1. Check `CORS_ALLOWED_ORIGINS` includes your frontend URL
2. Ensure no trailing slashes in URLs
3. Verify backend is running (check logs)

### Issue 3: Static Files Not Loading (CSS/JS)
**Cause:** Build directory incorrect
**Solution:**
1. Verify publish directory is `dist`
2. Run `npm run build` locally to test
3. Check build command includes `npm install`

### Issue 4: Database Connection Failed
**Cause:** Wrong Supabase credentials
**Solution:**
1. Use Supabase **pooler** URL (port 6543)
2. Format: `your-project.pooler.supabase.com`
3. Verify credentials in Supabase dashboard
4. Check SSL mode is enabled (`require`)

### Issue 5: 504 Timeout Errors
**Cause:** Cold start on free plan
**Solution:**
1. Free tier spins down after inactivity
2. First request takes 30-60 seconds
3. Consider upgrading to paid plan for 24/7 uptime
4. Or use a keep-alive service (e.g., UptimeRobot)

---

## üìä Performance Optimization (Already Applied)

Your application includes these optimizations:
- ‚úÖ Database connection pooling
- ‚úÖ Query optimization (select_related/prefetch_related)
- ‚úÖ Database indexes
- ‚úÖ Caching layer
- ‚úÖ Optimized JSON rendering
- ‚úÖ Static file compression

**Expected Performance:**
- API responses: 50-150ms
- Page loads: < 1 second
- Database queries: 2-5 per page

---

## üîí Security Checklist

- ‚úÖ `DEBUG=False` in production
- ‚úÖ Strong `SECRET_KEY` generated
- ‚úÖ `ALLOWED_HOSTS` configured
- ‚úÖ CORS properly restricted
- ‚úÖ `.env` files not in git
- ‚úÖ Environment variables in Render dashboard
- ‚ö†Ô∏è **TODO:** Set up HTTPS (Render does this automatically)
- ‚ö†Ô∏è **TODO:** Configure custom domain (optional)

---

## üìù Maintenance Tasks

### Update Code
```bash
git add .
git commit -m "Your update message"
git push origin main
```
Render auto-deploys on push to main branch.

### Manual Redeploy
1. Go to Render dashboard
2. Select your service
3. Click "Manual Deploy" ‚Üí "Deploy latest commit"

### View Logs
1. Render dashboard ‚Üí Your service
2. Click "Logs" tab
3. Monitor real-time logs

### Database Migrations
Migrations run automatically on deploy (in build command).
To run manually:
1. Render dashboard ‚Üí Your backend service
2. Click "Shell" tab
3. Run: `python manage.py migrate`

---

## üéØ Testing Production

### Backend Health Check
```bash
curl https://your-backend.onrender.com/admin/
```
Should show Django admin login page.

### API Endpoints Test
```bash
# Test sessions list
curl https://your-backend.onrender.com/api/sessions/

# Test login
curl -X POST https://your-backend.onrender.com/api/auth/login/ \
  -H "Content-Type: application/json" \
  -d '{"username":"admin","password":"your_password"}'
```

### Frontend Test
1. Visit your frontend URL
2. Test login with admin account
3. Navigate through dashboard
4. Check all pages load correctly
5. Test result entry/viewing
6. Verify images/media load

---

## üÜò Emergency Rollback

If deployment breaks:

1. **Find Last Working Commit:**
   ```bash
   git log --oneline
   ```

2. **Revert to Working Version:**
   ```bash
   git revert <commit-hash>
   git push origin main
   ```

3. **Or Force Deploy Specific Commit:**
   - Render dashboard ‚Üí Service
   - Manual Deploy ‚Üí Select commit
   - Deploy

---

## üìû Support Resources

- **Render Docs:** https://render.com/docs
- **Django Deployment:** https://docs.djangoproject.com/en/5.0/howto/deployment/
- **Vite Deployment:** https://vitejs.dev/guide/static-deploy.html
- **Supabase Docs:** https://supabase.com/docs

---

## ‚úÖ Final Checklist Before Going Live

- [ ] Backend deployed successfully
- [ ] Frontend deployed successfully
- [ ] Can login to admin panel
- [ ] Can login as student
- [ ] Can login as teacher
- [ ] Results display correctly
- [ ] Score entry works
- [ ] Media files (images) load
- [ ] All API endpoints working
- [ ] No console errors in browser
- [ ] Mobile responsive works
- [ ] Performance is acceptable
- [ ] Backup database created
- [ ] Admin accounts created
- [ ] Test data ready (or cleaned)

---

## üéâ You're Ready to Launch!

Once all checks pass, your school management system is live and ready for use!

**Your URLs:**
- **Backend API:** https://your-backend.onrender.com
- **Frontend App:** https://your-frontend.onrender.com
- **Admin Panel:** https://your-backend.onrender.com/admin

---

**Last Updated:** October 14, 2025
**Status:** ‚úÖ READY FOR DEPLOYMENT
